## No Static Group Authorization Rules **


## [Start] Dynamic Group Authorization Checks **
#set( $userGroups = $ctx.identity.claims.get("cognito:groups") )
#set( $isDynamicGroupAuthorized = $util.defaultIfNull($isDynamicGroupAuthorized, false) )
## Authorization rule: { allow: "groups", groupsField: "management" } **
#set( $allowedGroups = $ctx.result.management )
#foreach( $userGroup in $userGroups )
  #if( $util.isList($allowedGroups) )
    #if( $allowedGroups.contains($userGroup) )
      #set( $isDynamicGroupAuthorized = true )
    #end
  #end
  #if( $util.isString($allowedGroups) )
    #if( $allowedGroups == $userGroup )
      #set( $isDynamicGroupAuthorized = true )
    #end
  #end
#end
## Authorization rule: { allow: "groups", groupsField: "members" } **
#set( $allowedGroups = $ctx.result.members )
#foreach( $userGroup in $userGroups )
  #if( $util.isList($allowedGroups) )
    #if( $allowedGroups.contains($userGroup) )
      #set( $isDynamicGroupAuthorized = true )
    #end
  #end
  #if( $util.isString($allowedGroups) )
    #if( $allowedGroups == $userGroup )
      #set( $isDynamicGroupAuthorized = true )
    #end
  #end
#end
## [End] Dynamic Group Authorization Checks **


## [Start] Owner Authorization Checks **
#set( $isOwnerAuthorized = $util.defaultIfNull($isOwnerAuthorized, false) )
## Authorization rule: { allow: "owner", ownerField: "id", identityField: "cognito:username" } **
#set( $allowedOwners0 = $ctx.result.id )
#set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get("username"), $util.defaultIfNull($ctx.identity.claims.get("cognito:username"), "___xamznone____")) )
#if( $util.isList($allowedOwners0) )
  #foreach( $allowedOwner in $allowedOwners0 )
    #if( $allowedOwner == $identityValue )
      #set( $isOwnerAuthorized = true )
    #end
  #end
#end
#if( $util.isString($allowedOwners0) )
  #if( $allowedOwners0 == $identityValue )
    #set( $isOwnerAuthorized = true )
  #end
#end
## [End] Owner Authorization Checks **


## [Start] Throw if unauthorized **
#if( !($isStaticGroupAuthorized == true || $isDynamicGroupAuthorized == true || $isOwnerAuthorized == true) )
  $util.unauthorized()
#end
## [End] Throw if unauthorized **

$util.toJson($context.result)